<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Siri Voice Assistant</title>
  <style>
    body {
      margin: 0;
      display: flex;
      justify-content: center;
      align-items: center;
      min-height: 100vh;
      background-color: #000;
      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, sans-serif;
    }

    .container {
      text-align: center;
    }

    .siri-container {
      position: relative;
      width: 200px;
      height: 200px;
      margin: 0 auto;
    }

    .siri-icon {
      width: 100%;
      height: 100%;
    }

    .outer-circle {
      fill: none;
      stroke: #2d88ff;
      stroke-width: 2;
    }

    .inner-circle {
      fill: none;
      stroke: #2d88ff;
      stroke-width: 2;
    }

    .core {
      fill: #2d88ff;
      transform-origin: center;
    }

    @keyframes pulse {
      0% {
        transform: scale(1);
        opacity: 1;
      }
      50% {
        transform: scale(1.1);
        opacity: 0.7;
      }
      100% {
        transform: scale(1);
        opacity: 1;
      }
    }

    .wave-container {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      display: none;
    }

    .wave {
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      width: 100%;
      height: 2px;
      background: #2d88ff;
    }

    @keyframes wave {
      0% {
        transform: translate(-50%, -50%) scaleX(0.1);
        opacity: 0;
      }
      50% {
        transform: translate(-50%, -50%) scaleX(1);
        opacity: 1;
      }
      100% {
        transform: translate(-50%, -50%) scaleX(0.1);
        opacity: 0;
      }
    }

    .listening .wave {
      animation: wave 1.5s ease-in-out infinite;
    }

    .listening .core {
      animation: pulse 1.5s ease-in-out infinite;
    }

    .text-container {
      margin-top: 2rem;
      color: white;
      font-size: 1.5rem;
      min-height: 60px;
    }

    #start-btn {
      margin-top: 2rem;
      padding: 1rem 2rem;
      font-size: 1.2rem;
      background: #2d88ff;
      border: none;
      border-radius: 25px;
      color: white;
      cursor: pointer;
      transition: all 0.3s ease;
    }

    #start-btn:hover {
      background: #1a6cd4;
    }

    #start-btn:active {
      transform: scale(0.95);
    }
  </style>
</head>
<body>
  <div class="container">
    <div class="siri-container">
      <svg class="siri-icon" viewBox="0 0 100 100">
        <circle class="outer-circle" cx="50" cy="50" r="45" />
        <circle class="inner-circle" cx="50" cy="50" r="35" />
        <circle class="core" cx="50" cy="50" r="25" />
      </svg>
      <div class="wave-container">
        <div class="wave"></div>
      </div>
    </div>
    
    <div class="text-container">
      <p id="output-text">Say something...</p>
    </div>
    
    <button id="start-btn">Start Listening</button>
  </div>

  <script>
    document.addEventListener('DOMContentLoaded', () => {
      const startBtn = document.getElementById('start-btn');
      const outputText = document.getElementById('output-text');
      const siriContainer = document.querySelector('.siri-container');
      const waveContainer = document.querySelector('.wave-container');
      
      let recognition;
      
      if ('webkitSpeechRecognition' in window) {
        recognition = new webkitSpeechRecognition();
        recognition.continuous = false;
        recognition.interimResults = false;
        
        recognition.onstart = () => {
          startBtn.textContent = 'Listening...';
          siriContainer.classList.add('listening');
          waveContainer.style.display = 'block';
        };
        
        recognition.onresult = (event) => {
          const result = event.results[0][0].transcript;
          outputText.textContent = result;
        };
        
        recognition.onend = () => {
          startBtn.textContent = 'Start Listening';
          siriContainer.classList.remove('listening');
          waveContainer.style.display = 'none';
        };
        
        recognition.onerror = (event) => {
          console.error('Speech recognition error:', event.error);
          startBtn.textContent = 'Start Listening';
          siriContainer.classList.remove('listening');
          waveContainer.style.display = 'none';
          outputText.textContent = 'Error occurred. Please try again.';
        };
        
        startBtn.addEventListener('click', () => {
          if (startBtn.textContent === 'Start Listening') {
            recognition.start();
          } else {
            recognition.stop();
          }
        });
        
      } else {
        startBtn.style.display = 'none';
        outputText.textContent = 'Speech recognition is not supported in this browser.';
      }
    });
  </script>
</body>
</html>
